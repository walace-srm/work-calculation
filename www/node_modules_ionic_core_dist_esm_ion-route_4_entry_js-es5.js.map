{"version":3,"mappings":"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","names":["Route","constructor","hostRef","registerInstance","ionRouteDataChanged","createEvent","url","onUpdate","newValue","emit","onComponentProps","oldValue","keys1","Object","keys","keys2","length","key","connectedCallback","RouteRedirect","ionRouteRedirectChanged","propDidChange","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writePath","history","root","direction","state","parsePath","pushState","replaceState","chainToPath","chain","route","segment","param","params","slice","push","removePrefix","prefix","i","readPath","loc","pathname","hash","qsStart","indexOf","substr","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","beforeEnter","beforeLeave","a","b","assign","routerIDsToChain","chains","match","maxMatches","routerPathToChain","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","componentWillLoad","_this","runGuards","getPath","canProceed","setPath","writeNavStateRoot","onRoutesChanged","componentDidLoad","debounce","onRedirectChanged","bind","onPopState","_this2","historyDirection","onBackButton","ev","detail","register","processNextHandler","back","canTransition","_this3","startsWith","URL","location","href","parsedPath","_this4","waitPromise","printDebug","_this5","navChanged","_this6","warn","safeWriteNavState","_a","win","title","_this7","redirectFrom","_this8","lock","unlock","p","_this9","_this10","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","_this11","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","getElement","routerLinkCss","RouterLink","routerDirection","onClick","openURL","routerAnimation","render","mode","getIonMode","attrs","rel","target","h","Host","class","createColorClasses","color","style"],"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-7a8b7a1c.js';\nimport { c as componentOnReady, o as debounce } from './helpers-1457892a.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n// Join the non empty segments with \"/\".\nconst generatePath = (segments) => {\n  const path = segments\n    .filter(s => s.length > 0)\n    .join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...path], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\nconst chainToPath = (chain) => {\n  const path = [];\n  for (const route of chain) {\n    for (const segment of route.path) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        path.push(param);\n      }\n      else if (segment !== '') {\n        path.push(segment);\n      }\n    }\n  }\n  return path;\n};\n// Remove the prefix segments from the path segments.\n//\n// Return:\n// - null when the path segments do not start with the passed prefix,\n// - the path segments after the prefix otherwise.\nconst removePrefix = (prefix, path) => {\n  if (prefix.length > path.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n  if (path.length === prefix.length) {\n    return [''];\n  }\n  return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const path = parsePath(pathname).segments;\n  return removePrefix(prefix, path);\n};\n// Parses the path to:\n// - segments an array of '/' separated parts,\n// - queryString (undefined when no query string).\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substr(qsStart + 1);\n      path = path.substr(0, qsStart);\n    }\n    segments = path.split('/')\n      .map(s => s.trim())\n      .filter(s => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const path = [];\n    chain.forEach(r => path.push(...r.path));\n    const ids = chain.map(r => r.id);\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise(resolve => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    outlet = searchNavNode(node);\n    if (outlet) {\n      const id = await outlet.getRouteId();\n      if (id) {\n        node = id.element;\n        id.element = undefined;\n        ids.push(id);\n      }\n      else {\n        break;\n      }\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise(resolve => {\n    window.addEventListener('ionNavWillLoad', resolve, { once: true });\n  });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(QUERY)) {\n    return root;\n  }\n  const outlet = root.querySelector(QUERY);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n// Returns whether the given redirect matches the given path segments.\n//\n// A redirect matches when the segments of the path and redirect.from are equal.\n// Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n// The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\nconst matchesRedirect = (path, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > path.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== path[i]) {\n      return false;\n    }\n  }\n  return from.length === path.length;\n};\n// Returns the first redirect matching the path segments or undefined when no match found.\nconst findRouteRedirect = (path, redirects) => {\n  return redirects.find(redirect => matchesRedirect(path, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      /**\n       * Only compare routes with the chain that have the same number of parameters.\n       */\n      if (routeIdParams.length === routeChain.path.length) {\n        /**\n         * Maps the route's params into a path based on the path variable names,\n         * to compare against the route chain format.\n         *\n         * Before:\n         * ```ts\n         * {\n         *  params: {\n         *    s1: 'a',\n         *    s2: 'b'\n         *  }\n         * }\n         * ```\n         *\n         * After:\n         * ```ts\n         * [':s1',':s2']\n         * ```\n         */\n        const pathWithParams = routeIdParams.map(key => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.path[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\nconst matchesPath = (inputPath, chain) => {\n  const segments = new RouterSegments(inputPath);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const path = chain[i].path;\n    if (path[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of path) {\n        const data = segments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = (matchesDefault)\n    ? matchesDefault === (segments.next() === '')\n    : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave\n    }));\n  }\n  return chain;\n};\n// Merges the route parameter objects.\n// Returns undefined when both parameters are undefined.\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, ids[i] && ids[i].params)\n    }));\n  }\n  return null;\n};\nconst routerPathToChain = (path, chains) => {\n  let match = null;\n  let matches = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesPath(path, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > matches) {\n        matches = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const path of route.path) {\n      if (path[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (path !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(path) {\n    this.path = path.slice();\n  }\n  next() {\n    if (this.path.length > 0) {\n      return this.path.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map(el => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n    .map(el => {\n    const component = readProp(el, 'component');\n    return {\n      path: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el)\n    };\n  });\n};\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\nconst flattenNode = (chain, chains, node) => {\n  chain = chain.slice();\n  chain.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getPath());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setPath(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getPath();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, processNextHandler => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified URL.\n   *\n   * @param url The url to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(url, direction = 'forward', animation) {\n    if (url.startsWith('.')) {\n      url = (new URL(url, window.location.href)).pathname;\n    }\n    let parsedPath = parsePath(url);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setPath(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /**\n   * Go back to previous page in the window.history.\n   */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = routerIDsToChain(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n      return false;\n    }\n    const path = chainToPath(chain);\n    if (!path) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setPath(path, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n    return true;\n  }\n  // This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes.\n  onRedirectChanged() {\n    const path = this.getPath();\n    if (path && findRouteRedirect(path, readRedirects(this.el))) {\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n    }\n  }\n  // This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes.\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(path, direction, animation) {\n    if (!path) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(path, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments, queryString } = redirect.to;\n      this.setPath(segments, direction, queryString);\n      redirectFrom = redirect.from;\n      path = segments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = routerPathToChain(path, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise(r => resolve = r);\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  // Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n  //\n  // When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n  // Otherwise the beforeEnterHook hook of the target route is executed.\n  async runGuards(to = this.getPath(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = routerPathToChain(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = routerPathToChain(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(path, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setPath(path, direction, queryString) {\n    this.state++;\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n  }\n  getPath() {\n    return readPath(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(path, redirectFromPath) {\n    const from = this.previousPath;\n    const to = generatePath(path);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}